# -*- coding: utf-8 -*-
"""
/***************************************************************************
 RSDesigner
                                 A QGIS plugin
 This plugin designs a rainwater drainage system.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2022-04-05
        copyright            : (C) 2022 by Zhiyu Zhang
        email                : 865743207@qq.com
        git sha              : $Format:%H$
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
 This script initializes the plugin, making it known to QGIS.
"""
# import os
# import sys
# f = open(os.devnull, 'w')
# sys.stderr = f



import os,sys
pythonpath = os.path.join(os.path.dirname(sys.executable),'..','apps','Python39')
HERE = os.path.dirname(__file__)
bat_dir = os.path.join(HERE,'install.bat')

try:
    import fiona
    import geopandas
    import rtree
    import openpyxl
    import pyswmm
    import swmm_api
    import wmi
except:
    # import pip
    # pip.main(["install","./dependencies/Fiona-1.8.21-cp39-cp39-win_amd64.whl"])

    
    # cmds = "cmd.exe /c " + pythonpath + "\n  pip install -r " +\
    #     os.path.join(HERE,"requirements.txt") + " ; pause"
    
    cmds = '''cmd.exe /c {0} "{1}" "{2}" "{3}'''.format(bat_dir,pythonpath,os.path.dirname(sys.executable),HERE)
    # with open(os.path.join(HERE,'requirements.txt')) as f:
    #     requires = f.readlines()
    # requires = [req.strip('\n') for req in requires]
    
    # cmds = [pythonpath + " -m pip install" for req in requires]
    # cmds += ['pause']
    from subprocess import Popen, PIPE, STDOUT
    # p = subprocess.Popen(' && '.join(cmds))
    p = Popen(cmds)
    # p = Popen(cmds, stdout=PIPE,stderr=STDOUT)
    
    # curline = p.stdout.readline()
    # while(curline != b''):
    #     print(curline)
    #     curline = p.stdout.readline()
    
    # t = os.system(' && '.join(cmds))
    p.wait()

# if not os.path.exists(os.path.join(HERE,'register.lic')):
#     with open(os.path.join(HERE,'register.lic'), 'w') as f:
#         lines = [
#             'PYTHONPATH '+pythonpath+'\n',
#             'PLUGINPATH '+HERE+'\n',
#             'LICCODE '
#         ]
#         f.writelines(lines)


# noinspection PyPep8Naming
def classFactory(iface):  # pylint: disable=invalid-name
    """Load RSDesigner class from file RSDesigner.

    :param iface: A QGIS interface instance.
    :type iface: QgsInterface
    """
    #
    from .rs_designer import RSDesigner
    return RSDesigner(iface)